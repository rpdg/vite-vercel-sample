var Y=Object.defineProperty;var v=(u,l,t)=>l in u?Y(u,l,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[l]=t;var r=(u,l,t)=>(v(u,typeof l!="symbol"?l+"":l,t),t);import{p,U as E,b as g,g as w,R as C}from"./index.fb345625.js";import{B as N,l as D}from"./@rpdg.9741c2f9.js";import{h as c}from"./moment.29305b8e.js";var T=Object.defineProperty,G=Object.getOwnPropertyDescriptor,B=(u,l,t,e)=>{for(var n=e>1?void 0:e?G(l,t):l,a=u.length-1,i;a>=0;a--)(i=u[a])&&(n=(e?i(l,t,n):i(n))||n);return e&&n&&T(l,t,n),n};const R={Red:"#AB2B2F",Blue:"#2878FF",Yellow:"#F0B422",Black:"#020202",Gray:"#CDCDCF",Green:"#76c583"};class M extends N{constructor(){super();r(this,"virtualMap");r(this,"virtualMapDetail");r(this,"physicalMap");r(this,"physicalMapDetail");r(this,"physicalMap2");r(this,"blockTimeSlots");r(this,"inited",!1);r(this,"loadedTimes",0);this.virtualMap=new Map,this.virtualMapDetail=new Map,this.physicalMap=new Map,this.physicalMapDetail=new Map,this.physicalMap2=new Map([["2023-09-12",new Map([["1012",[]],["1315",[]],["1517",[]]])],["2023-09-13",new Map([["1012",[]],["1315",[]],["1517",[]]])],["2023-09-14",new Map([["1012",[]],["1315",[]],["1517",[]]])]])}async addBlockTime(l){return l.Type>0&&(l.BeginDateTime=l.BeginDateTime.substr(11,5),l.EndDateTime=l.EndDateTime.substr(11,5)),await p("NewQualifyDate/Add",l)}async getBlockTime(l){this.blockTimeSlots=await p("NewQualifyDate/list",{isOnline:l})}async delBlockTime(l){return await p("NewQualifyDate/remove",{id:l})}putColorNum(l,t,e,n,a,i,f){let y=l?this.virtualMap:this.physicalMap,s=E(t,g.minutesOffset,"YYYY-MM-DD");y.has(s)||y.set(s,[]);let o=y.get(s);o.includes(e)||o.push(e);let b=l?this.virtualMapDetail:this.physicalMapDetail;b.has(s)||b.set(s,[]);let d=b.get(s);n&&d.push({color:e,type:"unconfirmed",entry:n}),a&&d.push({color:e,type:"byMe",entry:a}),i&&d.push({color:e,type:"conference",entry:i}),f&&d.push({color:e,type:"byItb",entry:f})}putColorNum2(l,t,e,n,a,i,f){let y=this.physicalMap2,s=c(l).format("YYYY-MM-DD"),o=y.get(s);if(o){let b=c(l).isBetween(`${s} 10:00:00`,`${s} 12:00:00`,void 0,"[)"),d=c(l).isBetween(`${s} 13:00:00`,`${s} 15:00:00`,void 0,"[)"),S=c(l).isBetween(`${s} 15:00:00`,`${s} 17:00:00`,void 0,"[)"),h=o.get("");b&&(h=o.get("1012")),d&&(h=o.get("1315")),S&&(h=o.get("1517")),e&&h.push({color:t,type:"unconfirmed",entry:e}),n&&h.push({color:t,type:"byMe",entry:n}),a&&h.push({color:t,type:"conference",entry:a}),i&&h.push({color:t,type:"byItb",entry:i}),f&&h.push({color:t,type:"walkIn",entry:f})}}async getVirtualCalendar(l){let t=await p("NewSchedule/GetUserVirtualCalendar",l);++this.loadedTimes>1&&(this.inited=!0),t.conferenceList.forEach(e=>{e.type.toString()==="1"?this.putColorNum(!0,e.begindate,"Blue",null,null,e,null):this.putColorNum(!0,e.begindate,"Red",null,null,e,null)}),t.scheduleByMy.forEach(e=>{this.putColorNum(!0,e.begindate,"Black",null,e,null,null)}),t.scheduleByItb.forEach(e=>{this.putColorNum(!0,e.begindate,"Yellow",null,null,null,e)}),t.scheduleByUnConfirm.forEach(e=>{this.putColorNum(!0,e.begin_datetime,"Gray",e,null,null,null)})}async getPhysicalCalendar(l){let t=await p("NewSchedule/GetUserPhysicalExhibitionCalendar",l);++this.loadedTimes>1&&(this.inited=!0),t.conferenceList.forEach(e=>{e.type.toString()==="1"?this.putColorNum(!1,e.begindate,"Blue",null,null,e,null):this.putColorNum(!1,e.begindate,"Red",null,null,e,null)}),t.scheduleByMy.forEach(e=>{this.putColorNum(!1,e.begindate,"Black",null,e,null,null)}),t.scheduleByItb.forEach(e=>{this.putColorNum(!1,e.begindate,"Yellow",null,null,null,e)}),t.scheduleByUnConfirm.forEach(e=>{this.putColorNum(!1,e.begin_datetime,"Gray",e,null,null,null)})}async addSchedule(l){return await p("NewSchedule/AddInviteSchedule",l)}async getTextTip(l){let t=await w("Common/GetMapInfoByKey?key=calendar_tips");return l?t[0].value1:t[0].value2}async getSchedulesConference(){let l;return g.role===C.buyer?l=await w("schedule/GetBuyerSchedules"):g.role===C.exhibition&&(l=await w("schedule/GetExhibitionSchedules")),l}async getSchedules(){let l=c("2023-11-01");const t={beginDate:c(l).startOf("year").format("YYYY-MM-DD HH:mm:ss"),endDate:c(l).endOf("year").format("YYYY-MM-DD HH:mm:ss")};let e=await p("NewSchedule/GetUserPhysicalExhibitionCalendar",t);++this.loadedTimes>1&&(this.inited=!0),e.conferenceList.forEach(a=>{a.type.toString()==="1"?(a.begindate="2023-09-12 10:00:00",a.enddate="2023-09-12 12:00:00",this.putColorNum2(a.begindate,"Blue",null,null,a,null,null)):(a.begindate="2023-09-12 10:00:00",a.enddate="2023-09-12 12:00:00",this.putColorNum2(a.begindate,"Red",null,null,a,null,null))}),e.scheduleByUnConfirm.forEach(a=>{this.putColorNum2(a.begin_datetime,"Gray",a,null,null,null,null)});let n;g.role===C.buyer?n=await w("schedule/GetBuyerSchedules"):g.role===C.exhibition&&(n=await w("schedule/GetExhibitionSchedules")),n.forEach(a=>{switch(a.type){case 1:this.putColorNum2(a.begindate,"Yellow",null,null,null,a,null);break;case 2:this.putColorNum2(a.begindate,"Black",null,a,null,null,null);break;case 3:this.putColorNum2(a.begindate,"Green",null,null,null,null,a);break}})}}B([D],M.prototype,"getVirtualCalendar",1);B([D],M.prototype,"getPhysicalCalendar",1);const m=new M,U=function(){return{calendarStore:m}};export{R as C,U as u};
