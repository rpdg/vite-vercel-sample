var f=Object.defineProperty;var C=(s,a,t)=>a in s?f(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var r=(s,a,t)=>(C(s,typeof a!="symbol"?a+"":a,t),t);import{B as w,p as n,g,l as c}from"./index.5a3916c7.js";var B=Object.defineProperty,M=Object.getOwnPropertyDescriptor,y=(s,a,t,e)=>{for(var i=e>1?void 0:e?M(a,t):a,o=s.length-1,l;o>=0;o--)(l=s[o])&&(i=(e?l(a,t,i):l(i))||i);return e&&i&&B(a,t,i),i};const D={Red:"#AB2B2F",Blue:"#2878FF",Yellow:"#F0B422",Black:"#020202",Gray:"#CDCDCF"};class h extends w{constructor(){super();r(this,"virtualMap");r(this,"virtualMapDetail");r(this,"physicalMap");r(this,"physicalMapDetail");r(this,"blockTimeSlots");r(this,"inited",!1);r(this,"loadedTimes",0);this.virtualMap=new Map,this.virtualMapDetail=new Map,this.physicalMap=new Map,this.physicalMapDetail=new Map}async addBlockTime(a){return await n("NewQualifyDate/Add",a)}async getBlockTime(a){this.blockTimeSlots=await n("NewQualifyDate/list",{isOnline:a})}async delBlockTime(a){return await n("NewQualifyDate/remove",{id:a})}putColorNum(a,t,e,i){var d;let o=a?this.virtualMap:this.physicalMap,l=t.replace(/\//g,"-").split(" ")[0];o.has(l)||o.set(l,[]);let u=o.get(l);(u==null?void 0:u.indexOf(e))===-1&&(u==null||u.push(e));let p=a?this.virtualMapDetail:this.physicalMapDetail;p.has(l)||p.set(l,[]),(d=p.get(l))==null||d.push({type:e,item:i})}async getVirtualCalendar(a){let t=await n("NewSchedule/GetUserVirtualCalendar",a);++this.loadedTimes>1&&(this.inited=!0),t.conferenceList.forEach(e=>{e.type==="1"?this.putColorNum(!0,e.begindate,"Blue",e):this.putColorNum(!0,e.begindate,"Red",e)}),t.scheduleByMy.forEach(e=>{this.putColorNum(!0,e.begindate,"Black",e)}),t.scheduleByItb.forEach(e=>{this.putColorNum(!0,e.begindate,"Yellow",e)}),t.scheduleByUnConfirm.forEach(e=>{this.putColorNum(!0,e.begindate,"Gray",e)})}async getPhysicalCalendar(a){let t=await n("NewSchedule/GetUserPhysicalExhibitionCalendar",a);++this.loadedTimes>1&&(this.inited=!0),t.conferenceList.forEach(e=>{e.type==="1"?this.putColorNum(!1,e.begindate,"Blue",e):this.putColorNum(!1,e.begindate,"Red",e)}),t.scheduleByMy.forEach(e=>{this.putColorNum(!1,e.begindate,"Black",e)}),t.scheduleByItb.forEach(e=>{this.putColorNum(!1,e.begindate,"Yellow",e)}),t.scheduleByUnConfirm.forEach(e=>{this.putColorNum(!1,e.begindate,"Gray",e)})}async addSchedule(a){return await n("NewSchedule/AddInviteSchedule",a)}async getTextTip(a){let t=await g("Common/GetMapInfoByKey?key=calendar_tips");return a?t[0].value1:t[0].value2}}y([c],h.prototype,"getVirtualCalendar",1);y([c],h.prototype,"getPhysicalCalendar",1);const b=new h,T=function(){return{calendarStore:b}};export{D as C,T as u};
